$# =====================================================
 # BACKEND PRODUCTION ENVIRONMENT VARIABLES
 #
 # INSTRUCTIONS:
 # 1. Copy this file to .env at the project root.
 # 2. Set MONGODB_URI to your production MongoDB instance (Atlas or secured remote DB).
 # 3. Generate a strong JWT_SECRET with:
 #    node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
 # 4. Adjust JWT_EXPIRES_IN (in seconds, e.g., 3600 for 1 hour).
 # 5. Set FRONTEND_URL to your deployed frontend URL (for CORS).
 # 6. Fill in the other values as appropriate for your production setup.
 # 7. Never commit this file with real secrets to version control.
 # =====================================================

 # MongoDB connection string (PRODUCTION - Atlas or remote)
 MONGODB_URI=

 # Strong JWT secret (see instructions above)
 JWT_SECRET=

 # Token validity duration in seconds (e.g., 3600 for 1 hour)
 JWT_EXPIRES_IN=3600

 # Bcrypt hashing rounds (12 is recommended)
 BCRYPT_ROUNDS=12

 # Application Port (commonly 5000 for production)
 PORT=5000

 # Node environment
 NODE_ENV=production

 # Frontend URL allowed by CORS (set to your deployed frontend URL)
 FRONTEND_URL=

 # MongoDB admin (used for DB initialization/migrations)
 MONGO_INITDB_ROOT_USERNAME=
 MONGO_INITDB_ROOT_PASSWORD=
 MONGO_INITDB_DATABASE=

 # Admin user (never store plain password, only the hash)
 ADMIN_EMAIL=
 ADMIN_PASSWORD_HASH=   # Generate with: node -pe "require('bcryptjs').hashSync('YOUR_PASSWORD', 12)"
